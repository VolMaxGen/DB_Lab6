// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lab6.Models;

#nullable disable

namespace lab6.Migrations
{
    [DbContext(typeof(CafeContext))]
    partial class CafeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("lab6.Models.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CookingTime")
                        .HasColumnType("int");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UQ__Dishes__737584F6513A3CE2")
                        .IsUnique();

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("lab6.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((18))");

                    b.Property<string>("Education")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("ProfessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProfessionId" }, "IX_Employees_ProfessionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("lab6.Models.Ingridient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UQ__Ingridie__737584F6A66E861B")
                        .IsUnique();

                    b.ToTable("Ingridients");
                });

            modelBuilder.Entity("lab6.Models.IngridientsDish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int>("IngridientId")
                        .HasColumnType("int");

                    b.Property<int>("IngridientWeight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DishId" }, "IX_IngridientsDishes_DishId");

                    b.HasIndex(new[] { "IngridientId" }, "IX_IngridientsDishes_IngridientId");

                    b.ToTable("IngridientsDishes");
                });

            modelBuilder.Entity("lab6.Models.IngridientsWarehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("IngridientId")
                        .HasColumnType("int");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StorageLife")
                        .HasColumnType("date");

                    b.Property<int?>("Weight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IngridientId" }, "IX_IngridientsWarehouses_IngridientId");

                    b.HasIndex(new[] { "ProviderId" }, "IX_IngridientsWarehouses_ProviderId");

                    b.ToTable("IngridientsWarehouses");
                });

            modelBuilder.Entity("lab6.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CustomerPhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("IsCompleted")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_Orders_EmployeeId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("lab6.Models.OrderDish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DishId" }, "IX_OrderDishes_DishId");

                    b.HasIndex(new[] { "OrderId" }, "IX_OrderDishes_OrderId");

                    b.ToTable("OrderDishes");
                });

            modelBuilder.Entity("lab6.Models.Profession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UQ__Professi__737584F6D7EB01B2")
                        .IsUnique()
                        .HasFilter("([Name] IS NOT NULL)");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("lab6.Models.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UQ__Provider__737584F62645BCF3")
                        .IsUnique();

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("lab6.Models.Employee", b =>
                {
                    b.HasOne("lab6.Models.Profession", "Profession")
                        .WithMany("Employees")
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Employees_To_Professions");

                    b.Navigation("Profession");
                });

            modelBuilder.Entity("lab6.Models.IngridientsDish", b =>
                {
                    b.HasOne("lab6.Models.Dish", "Dish")
                        .WithMany("IngridientsDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_IngridientsDishes_To_Dishes");

                    b.HasOne("lab6.Models.Ingridient", "Ingridient")
                        .WithMany("IngridientsDishes")
                        .HasForeignKey("IngridientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_IngridientsDishes_To_Ingridients");

                    b.Navigation("Dish");

                    b.Navigation("Ingridient");
                });

            modelBuilder.Entity("lab6.Models.IngridientsWarehouse", b =>
                {
                    b.HasOne("lab6.Models.Ingridient", "Ingridient")
                        .WithMany("IngridientsWarehouses")
                        .HasForeignKey("IngridientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_IngridientsWarehouses_To_Ingridients");

                    b.HasOne("lab6.Models.Provider", "Provider")
                        .WithMany("IngridientsWarehouses")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_IngridientsWarehouses_To_Providers");

                    b.Navigation("Ingridient");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("lab6.Models.Order", b =>
                {
                    b.HasOne("lab6.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Orders_To_Employees");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("lab6.Models.OrderDish", b =>
                {
                    b.HasOne("lab6.Models.Dish", "Dish")
                        .WithMany("OrderDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrderDishes_To_Dishes");

                    b.HasOne("lab6.Models.Order", "Order")
                        .WithMany("OrderDishes")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrderDishes_To_Orders");

                    b.Navigation("Dish");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("lab6.Models.Dish", b =>
                {
                    b.Navigation("IngridientsDishes");

                    b.Navigation("OrderDishes");
                });

            modelBuilder.Entity("lab6.Models.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("lab6.Models.Ingridient", b =>
                {
                    b.Navigation("IngridientsDishes");

                    b.Navigation("IngridientsWarehouses");
                });

            modelBuilder.Entity("lab6.Models.Order", b =>
                {
                    b.Navigation("OrderDishes");
                });

            modelBuilder.Entity("lab6.Models.Profession", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("lab6.Models.Provider", b =>
                {
                    b.Navigation("IngridientsWarehouses");
                });
#pragma warning restore 612, 618
        }
    }
}
